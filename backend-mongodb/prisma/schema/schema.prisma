datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder", "omitApi"]
}

enum Role {
  admin
  paidUser
  user
}

model User {
  id            Int             @id @default(autoincrement())
  username      String          @unique
  email         String          @unique 
  name          String
  password      String
  role          Role            @default(user)
  createdMovies Movie[]        
  likedMovies   MovieUserLike[]
  chats         Chat[]
  chatRooms     ChatRoom[]

  @@map("User")
}

model Movie {
  id            Int             @id @default(autoincrement())
  creator       User            @relation(fields: [creatorId], references: [id])
  creatorId     Int
  title         String          @unique
  genres        Genre[]
  likeCount     Int             @default(0)
  dislikeCount  Int             @default(0)
  detail        MovieDetail     @relation(fields: [detailId], references: [id])
  detailId      Int             @unique
  movieFilePath String
  director      Director        @relation(fields: [directorId], references: [id])
  directorId    Int
  likedUsers    MovieUserLike[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  version       Int             @default(0)

  @@map("Movie")
}

model MovieUserLike {
  movie   Movie   @relation(fields: [movieId], references: [id])
  movieId Int
  user    User    @relation(fields: [userId], references: [id])
  userId  Int
  isLike  Boolean

  @@id([movieId, userId])
  @@map("MovieUserLike")
}

model MovieDetail {
  id     Int    @id @default(autoincrement())
  detail String
  movie  Movie?

  @@map("MovieDetail")
}

model Chat {
  id         Int      @id @default(autoincrement())
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  message    String
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int

  @@map("Chat")
}

model ChatRoom {
  id    Int    @id @default(autoincrement())
  users User[]
  chats Chat[]

  @@map("ChatRoom")
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  movies Movie[]

  @@map("Genre")
}

model Director {
  id          Int     @id @default(autoincrement())
  name        String
  dob         DateTime
  nationality String
  movies      Movie[]

  @@map("Director")
}
