name: CI/CD for NestJS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: [self-hosted, nextjs-host]

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3

      - name: ✅ Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: ✅ List directory contents
        run: |
          pwd
          ls -alR

      - name: ✅ Create .env file from secrets
        run: |
          mkdir -p backend
          echo "${{ secrets.ENV }}" > backend/.env
          echo ".env created in backend/"

      - name: ✅ Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: ✅ Build backend project
        working-directory: ./backend
        run: npm run build

      - name: ✅ Setup SSH private key and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.PORT }} -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: ✅ Compress and transfer build to remote server
        run: |
          tar -czf backend.tar.gz backend
          scp -F /dev/null -P ${{ secrets.PORT }} backend.tar.gz ${{ secrets.USER }}@${{ secrets.HOST }}:${{ secrets.TARGET_DIR }}/backend-latest.tar.gz

      # backend-latest.tar.gz 압축 파일을 전송 된 운영서버에서 실행처리 로직  
      - name: ✅ Connect & Extract build
        run: |
          ssh -F /dev/null -p "$PORT" "$USER@$HOST" << 'EOF'
            set -e
            cd "$TARGET_DIR"
            rm -rf backend_new
            mkdir backend_new
            tar -xzf backend-latest.tar.gz -C backend_new --strip-components=1
          EOF

      - name: ✅ Fix permissions
        run: |
          ssh -F /dev/null -p "$PORT" "$USER@$HOST" "chown -R nextjs:nextjs '$TARGET_DIR/backend_new'"

      - name: ✅ Update symlink
        run: |
          ssh -F /dev/null -p "$PORT" "$USER@$HOST" "ln -sfn '$TARGET_DIR/backend_new' '$TARGET_DIR/current'"

      - name: ✅ Install production dependencies
        run: |
          ssh -F /dev/null -p "$PORT" "$USER@$HOST" << 'EOF'
            cd "$TARGET_DIR/current"
            npm install --omit=dev
          EOF

      - name: ✅ Restart PM2 service
        run: |
          ssh -F /dev/null -p "$PORT" "$USER@$HOST" << 'EOF'
            cd "$TARGET_DIR/current"
            pm2 restart app || pm2 start dist/main.js --name app
            pm2 save
          EOF
